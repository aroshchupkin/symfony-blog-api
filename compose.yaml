version: '3.8'

services:
  webserver:
    build: docker/nginx
    container_name: ${PROJECT_NAME}-webserver
    working_dir: /application
    restart: unless-stopped
    networks:
      - internal
    volumes:
      - ./:/application
      - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      - php-fpm
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  php-fpm:
    build: docker/php-fpm
    container_name: ${PROJECT_NAME}-php-fpm
    restart: unless-stopped
    working_dir: /application
    environment:
      - PHP_WORKER_INSTALL_BCMATH=true
    volumes:
      - ./:/application
      - ./docker/php-fpm/php-ini-overrides.ini:/usr/local/etc/php/conf.d/99-overrides.ini
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "php-fpm -t" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  database:
    image: postgres:13-alpine
    container_name: ${PROJECT_NAME}-postgres
    restart: unless-stopped
    env_file:
      - .env
    environment:
      PGPASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - ./docker/postgres:/tmp
      - 'pg-data:/var/lib/postgresql/data'
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    ports:
      - '${DB_PORT}:5432'
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_DATABASE}" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: ${PROJECT_NAME}-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis-data:/data
      - ./docker/redis/redis.conf:/etc/redis/redis.conf
    command: ["redis-server", "/etc/redis/redis.conf"]
    networks:
      - internal
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  pg-data:
    driver: local
  redis-data:
    driver: local

networks:
  internal:
    driver: bridge
